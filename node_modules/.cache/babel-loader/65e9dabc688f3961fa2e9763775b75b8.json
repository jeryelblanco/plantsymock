{"ast":null,"code":"var _jsxFileName = \"/Users/jeryelblanco/Documents/phase2/plantsy/react-hooks-mock-code-challenge-plantshop/src/components/NewPlantForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewPlantForm() {\n  _s();\n\n  const [inputName, setInputName] = useState('');\n  const [inputImage, setInputImage] = useState('');\n  const [inputPrice, setInputPrice] = useState(0);\n\n  function handlePost() {\n    fetch('http://localhost:6001/plants', {\n      'method': 'POST',\n      'headers': {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: inputName,\n        image: inputImage,\n        price: inputPrice\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  function handleSubmit(e) {\n    setInputName(e.target.name.value);\n    setInputImage(e.target.image.value);\n    setInputPrice(e.target.price.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-plant-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Plant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      onSub: true,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Plant name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"image\",\n        placeholder: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        step: \"0.01\",\n        placeholder: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewPlantForm, \"c3Oq79/eF7kn4Y6xeXjTMvBnTJU=\");\n\n_c = NewPlantForm;\nexport default NewPlantForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlantForm\");","map":{"version":3,"sources":["/Users/jeryelblanco/Documents/phase2/plantsy/react-hooks-mock-code-challenge-plantshop/src/components/NewPlantForm.js"],"names":["React","useState","NewPlantForm","inputName","setInputName","inputImage","setInputImage","inputPrice","setInputPrice","handlePost","fetch","body","JSON","stringify","name","image","price","then","response","json","data","console","log","handleSubmit","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,SAASC,YAAT,GAAwB;AAAA;;AAExB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;;AAGA,WAASQ,UAAT,GAAqB;AACnBC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpC,gBAAU,MAD0B;AAEpC,iBAAW;AACT,wBAAgB;AADP,OAFyB;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEX,SADa;AAEnBY,QAAAA,KAAK,EAAEV,UAFY;AAGnBW,QAAAA,KAAK,EAAET;AAHY,OAAf;AAL8B,KAAjC,CAAL,CAWGU,IAXH,CAWQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXpB,EAYGF,IAZH,CAYQG,IAAI,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACC,KAdH;AAeC;;AACH,WAASG,YAAT,CAAsBC,CAAtB,EAAwB;AACtBpB,IAAAA,YAAY,CAACoB,CAAC,CAACC,MAAF,CAASX,IAAT,CAAcY,KAAf,CAAZ;AACApB,IAAAA,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASV,KAAT,CAAeW,KAAhB,CAAb;AACAlB,IAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAAST,KAAT,CAAeU,KAAhB,CAAb;AACD;;AAIC,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAA8B,MAAA,KAAK,MAAnC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA3CQrB,Y;;KAAAA,Y;AA6CT,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nfunction NewPlantForm() {\n\nconst [inputName, setInputName] = useState('')\nconst [inputImage, setInputImage] = useState('')\nconst [inputPrice, setInputPrice] = useState(0)\n\n\nfunction handlePost(){\n  fetch('http://localhost:6001/plants', {\n    'method': 'POST',\n    'headers': {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: inputName,\n      image: inputImage,\n      price: inputPrice\n    })\n    })\n    .then(response => response.json())\n    .then(data => {\n    console.log(data)\n    })\n  }\nfunction handleSubmit(e){\n  setInputName(e.target.name.value)\n  setInputImage(e.target.image.value)\n  setInputPrice(e.target.price.value)\n}\n\n\n\n  return (\n    <div className=\"new-plant-form\">\n      <h2>New Plant</h2>\n      <form onSubmit={handleSubmit} onSub>\n        <input type=\"text\" name=\"name\" placeholder=\"Plant name\" />\n        <input type=\"text\" name=\"image\" placeholder=\"Image URL\" />\n        <input type=\"number\" name=\"price\" step=\"0.01\" placeholder=\"Price\" />\n        <button type=\"submit\">Add Plant</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewPlantForm;\n"]},"metadata":{},"sourceType":"module"}